{"ast":null,"code":"var _jsxFileName = \"/data/golang/project/src/react-app/src/containers/Signup.js\";\nimport React, { Component } from 'react';\nimport { Buttom, Button } from 'react-bootstrap';\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: undefined,\n      password: undefined,\n      signUpError: undefined\n    };\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleChangePasswordConfirm = this.handleChangePasswordConfirm.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n\n  handleChangeUsername(value) {\n    this.setState({\n      username: value\n    });\n  }\n\n  handleChangePassword(value) {\n    this.setState({\n      password: value\n    });\n  }\n\n  handleChangePasswordConfirm(value) {\n    this.setState({\n      passwordConfirm: value\n    });\n  }\n\n  handleSignUp() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password,\n          passwordConfirm = _this$state.passwordConfirm;\n\n    if (password !== passwordConfirm) {\n      alert(\"Password not match\");\n    } else {\n      fetch(\"http://localhost:8766/user/signup\", {\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Content-Type',\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Credentials': 'true'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(res => res.json()).then(result => {\n        if (result.message === \"success\") alert(\"Created \" + username + \" successfully\");else alert(\"User \" + username + \" is existing. Please choose other username\");\n      });\n    }\n\n    this.setState({\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-signin-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" Please sign in \"), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Username\"), React.createElement(\"input\", {\n      id: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      value: this.state.username,\n      onChange: e => this.handleChangeUsername(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      placeholder: \"Password\",\n      onChange: e => this.handleChangePassword(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Password Comfirm\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password-confirm\",\n      className: \"form-control\",\n      value: this.state.passwordConfirm,\n      placeholder: \"Password Comfirm\",\n      onChange: e => this.handleChangePasswordConfirm(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.handleSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Sign in\")));\n  }\n\n}","map":{"version":3,"sources":["/data/golang/project/src/react-app/src/containers/Signup.js"],"names":["React","Component","Buttom","Button","SignUp","constructor","props","state","username","undefined","password","signUpError","handleChangeUsername","bind","handleChangePassword","handleChangePasswordConfirm","handleSignUp","value","setState","passwordConfirm","alert","fetch","method","mode","credentials","headers","body","JSON","stringify","then","res","json","result","message","render","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Buttom, Button } from 'react-bootstrap';\n\nexport default class SignUp extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      username: undefined,\n      password: undefined,\n      signUpError: undefined\n    }\n    this.handleChangeUsername = this.handleChangeUsername.bind(this)\n    this.handleChangePassword = this.handleChangePassword.bind(this)\n    this.handleChangePasswordConfirm = this.handleChangePasswordConfirm.bind(this)\n    this.handleSignUp = this.handleSignUp.bind(this)\n  }\n  handleChangeUsername(value){\n    this.setState({\n      username: value,\n    })\n  }\n  handleChangePassword(value){\n    this.setState({\n      password: value,\n    })\n  }\n  handleChangePasswordConfirm(value){\n    this.setState({\n      passwordConfirm: value,\n    })\n  }\n  handleSignUp() {\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = this.state;\n    if (password !== passwordConfirm) {\n      alert(\"Password not match\")\n    }\n    else {\n      fetch(\"http://localhost:8766/user/signup\",{\n        method: 'POST',\n        mode: 'cors',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Headers': 'Content-Type',\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Credentials':'true'\n        },\n        body: JSON.stringify({\n          username:username,\n          password:password,\n        }),\n      }).then((res)=>res.json()).then((result)=>{\n        \n        if (result.message===\"success\")\n          alert(\"Created \" + username + \" successfully\")\n        else\n          alert(\"User \"+ username +\" is existing. Please choose other username\")\n      })\n    }\n    this.setState({\n      username:\"\",\n      password:\"\",\n      passwordConfirm:\"\"\n    })\n  }\n  render() {\n    return (\n    <form className=\"form-signin\">\n            <h2 className=\"form-signin-heading\"> Please sign in </h2>\n            <label className=\"sr-only\"> Username\n            </label>\n            <input id=\"username\" className=\"form-control\" placeholder=\"Username\" value={this.state.username} onChange={(e)=>this.handleChangeUsername(e.target.value)} required />\n\n            <label className=\"sr-only\"> Password</label>\n            <input type=\"password\" id=\"password\" className=\"form-control\"  value={this.state.password} placeholder=\"Password\" onChange={(e)=>this.handleChangePassword(e.target.value)} required />\n            <label className=\"sr-only\"> Password Comfirm</label>\n            <input type=\"password\" id=\"password-confirm\" className=\"form-control\" value={this.state.passwordConfirm} placeholder=\"Password Comfirm\" onChange={(e)=>this.handleChangePasswordConfirm(e.target.value)} required />\n            <ButtonToolbar>\n            <Button variant=\"outline-primary\" onClick={this.handleSignUp}> \n              Sign in\n            </Button>\n            </ButtonToolbar>\n        </form>\n    )\n}\n}\n"]},"metadata":{},"sourceType":"module"}