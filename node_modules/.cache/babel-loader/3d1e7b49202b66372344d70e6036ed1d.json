{"ast":null,"code":"var _jsxFileName = \"/data/golang/project/src/react-app/src/containers/Signup.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Textbox, Radiobox, Checkbox, Select, Textarea } from 'react-inputs-validation';\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\nimport './static/style.css';\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      signUpError: \"\"\n    };\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleChangePasswordConfirm = this.handleChangePasswordConfirm.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n  }\n\n  handleChangeUsername(value) {\n    this.setState({\n      username: value\n    });\n  }\n\n  handleChangePassword(value) {\n    this.setState({\n      password: value\n    });\n  }\n\n  handleChangePasswordConfirm(value) {\n    this.setState({\n      passwordConfirm: value\n    });\n  }\n\n  handleSignUp(e) {\n    e.preventDefault();\n    this.toggleValidating(true);\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password,\n          passwordConfirm = _this$state.passwordConfirm;\n\n    if (!username && !password && !passwordConfirm) {\n      if (password !== passwordConfirm) {\n        alert(\"Password not match\");\n      } else {\n        fetch(\"http://localhost:8766/user/signup\", {\n          method: 'POST',\n          mode: 'cors',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type',\n            'Access-Control-Allow-Methods': 'POST',\n            'Access-Control-Allow-Credentials': 'true'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        }).then(res => res.json()).then(result => {\n          if (result.message === \"success\") alert(\"Created \" + username + \" successfully\");else alert(\"User \" + username + \" is existing. Please choose other username\");\n        });\n      }\n\n      this.setState({\n        username: \"\",\n        password: \"\",\n        passwordConfirm: \"\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-signin-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Please sign in \"), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Username\"), React.createElement(\"input\", {\n      id: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      value: this.state.username,\n      onChange: e => this.handleChangeUsername(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \" Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      placeholder: \"Password\",\n      onChange: e => this.handleChangePassword(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Password Comfirm\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password-confirm\",\n      className: \"form-control\",\n      value: this.state.passwordConfirm,\n      placeholder: \"Password Comfirm\",\n      onChange: e => this.handleChangePasswordConfirm(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.handleSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Sign in\"));\n  }\n\n}","map":{"version":3,"sources":["/data/golang/project/src/react-app/src/containers/Signup.js"],"names":["React","Component","Button","Textbox","Radiobox","Checkbox","Select","Textarea","SignUp","constructor","props","state","username","password","signUpError","handleChangeUsername","bind","handleChangePassword","handleChangePasswordConfirm","handleSignUp","value","setState","passwordConfirm","e","preventDefault","toggleValidating","alert","fetch","method","mode","credentials","headers","body","JSON","stringify","then","res","json","result","message","render","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Textbox, Radiobox, Checkbox, Select, Textarea } from 'react-inputs-validation';\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\nimport './static/style.css'\nexport default class SignUp extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      username: \"\",\n      password: \"\",\n      signUpError: \"\"\n    }\n    this.handleChangeUsername = this.handleChangeUsername.bind(this)\n    this.handleChangePassword = this.handleChangePassword.bind(this)\n    this.handleChangePasswordConfirm = this.handleChangePasswordConfirm.bind(this)\n    this.handleSignUp = this.handleSignUp.bind(this)\n  }\n  handleChangeUsername(value){\n    this.setState({\n      username: value,\n    })\n  }\n  handleChangePassword(value){\n    this.setState({\n      password: value,\n    })\n  }\n  handleChangePasswordConfirm(value){\n    this.setState({\n      passwordConfirm: value,\n    })\n  }\n  handleSignUp(e) {\n    e.preventDefault()\n    this.toggleValidating(true);\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = this.state;\n    if (\n      !username &&\n      !password &&\n      !passwordConfirm\n    ) {\n      if (password !== passwordConfirm) {\n        alert(\"Password not match\")\n      }\n      else {\n        fetch(\"http://localhost:8766/user/signup\",{\n          method: 'POST',\n          mode: 'cors',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': 'Content-Type',\n            'Access-Control-Allow-Methods': 'POST',\n            'Access-Control-Allow-Credentials':'true'\n          },\n          body: JSON.stringify({\n            username:username,\n            password:password,\n          }),\n        }).then((res)=>res.json()).then((result)=>{\n          \n          if (result.message===\"success\")\n            alert(\"Created \" + username + \" successfully\")\n          else\n            alert(\"User \"+ username +\" is existing. Please choose other username\")\n        })\n      }\n      this.setState({\n        username:\"\",\n        password:\"\",\n        passwordConfirm:\"\"\n      })\n    }\n    \n  }\n  render() {\n    return (\n    <form className=\"form-signin\">\n            <h2 className=\"form-signin-heading\"> Please sign in </h2>\n            <label className=\"sr-only\"> Username\n            </label>\n            <input id=\"username\" className=\"form-control\" placeholder=\"Username\" value={this.state.username} onChange={(e)=>this.handleChangeUsername(e.target.value)} required />\n\n            <label className=\"sr-only\"> Password</label>\n            <input type=\"password\" id=\"password\" className=\"form-control\"  value={this.state.password} placeholder=\"Password\" onChange={(e)=>this.handleChangePassword(e.target.value)} required />\n            <label className=\"sr-only\"> Password Comfirm</label>\n            <input type=\"password\" id=\"password-confirm\" className=\"form-control\" value={this.state.passwordConfirm} placeholder=\"Password Comfirm\" onChange={(e)=>this.handleChangePasswordConfirm(e.target.value)} required />\n            <Button variant=\"outline-primary\" onClick={this.handleSignUp}> \n              Sign in\n            </Button>\n        </form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}