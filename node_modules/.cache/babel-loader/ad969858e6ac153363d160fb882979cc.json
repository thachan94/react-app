{"ast":null,"code":"var _jsxFileName = \"/data/golang/project/src/react-app/src/containers/Signup.js\";\nimport React, { Component } from 'react';\n\nconst fetchSignup = async (username, password) => {\n  const reqOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n\n  try {\n    let res = await fetch('http://localhost:8766/user/signup', reqOptions);\n    let resJson = await res.json();\n    return resJson;\n  } catch (e) {\n    if (e) {\n      console.log(e);\n    }\n  }\n};\n\nexport default class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: undefined,\n      password: undefined,\n      signUpError: undefined\n    };\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n  }\n\n  handleChangeUsername(value) {\n    this.setState({\n      username: value\n    });\n  }\n\n  handleChangePassword(value) {\n    this.setState({\n      password: value\n    });\n  }\n\n  onSignUp() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n    fetch(\"http://localhost:8766/user/signup\", {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Allow-Methods': 'POST'\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.Status == \"Success\") console.log(\"OK\");else alert(\"Have problem\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-signin-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Please sign in \"), React.createElement(\"label\", {\n      for: \"username\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Username\"), React.createElement(\"input\", {\n      id: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      onChange: e => this.handleChangeUsername(e.target.value),\n      required: true,\n      autofocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"password\",\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      onChange: e => this.handleChangePassword(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"button\",\n      onClick: this.onSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Sign in\"));\n  }\n\n}","map":{"version":3,"sources":["/data/golang/project/src/react-app/src/containers/Signup.js"],"names":["React","Component","fetchSignup","username","password","reqOptions","method","headers","body","JSON","stringify","res","fetch","resJson","json","e","console","log","SignUp","constructor","props","state","undefined","signUpError","handleChangeUsername","bind","handleChangePassword","onSignUp","value","setState","then","result","Status","alert","render","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst fetchSignup = async (username, password) =>{\n  const reqOptions = {\n      method: 'POST',\n      headers:  { 'Content-Type': 'application/json' },\n      body : JSON.stringify({username, password})\n  };\n  try {\n      let res = await fetch('http://localhost:8766/user/signup', reqOptions)\n      let resJson = await res.json()\n      return resJson;\n  } catch (e){\n      if (e){\n          console.log(e)\n      }\n  }\n}\nexport default class SignUp extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      username: undefined,\n      password: undefined,\n      signUpError: undefined\n    }\n    this.handleChangeUsername = this.handleChangeUsername.bind(this)\n    this.handleChangePassword = this.handleChangePassword.bind(this)\n    this.onSignUp = this.onSignUp.bind(this)\n  }\n  handleChangeUsername(value){\n    this.setState({\n      username: value,\n    })\n  }\n  handleChangePassword(value){\n    this.setState({\n      password: value,\n    })\n  }\n  onSignUp() {\n    const {\n      username,\n      password\n    } = this.state;\n    fetch(\"http://localhost:8766/user/signup\",{\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Allow-Methods': 'POST',\n      },\n      \n      body: JSON.stringify({\n        username:this.state.username,\n        password:this.state.password\n      }),\n    }).then((res)=>res.json()).then((result)=>{\n      if (result.Status==\"Success\")\n        console.log(\"OK\")\n      else\n        alert(\"Have problem\")\n    })\n  }\n  render() {\n    return (\n    <form className=\"form-signin\">\n            <h2 className=\"form-signin-heading\"> Please sign in </h2>\n            <label for=\"username\" className=\"sr-only\"> Username\n            </label>\n            <input id=\"username\" className=\"form-control\" placeholder=\"Username\" onChange={(e)=>this.handleChangeUsername(e.target.value)} required autofocus />\n            <label for=\"password\" className=\"sr-only\"> Password</label>\n            <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={(e)=>this.handleChangePassword(e.target.value)} required />\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"button\" onClick={this.onSignUp}> Sign in\n            </button>\n        </form>\n    )\n}\n}\n"]},"metadata":{},"sourceType":"module"}