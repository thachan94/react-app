{"ast":null,"code":"var _jsxFileName = \"/data/golang/project/src/react-app/src/containers/Login.js\";\nimport React, { Component } from 'react';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: undefined,\n      password: undefined,\n      signUpError: undefined\n    };\n    this.handleChangeUsername = this.handleChangeUsername.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleChangeUsername(value) {\n    this.setState({\n      username: value\n    });\n  }\n\n  handleChangePassword(value) {\n    this.setState({\n      password: value\n    });\n  }\n\n  handleLogin() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n    fetch(\"http://localhost:8766/user/login\", {\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Allow-Methods': 'POST',\n        'Access-Control-Allow-Credentials': 'true'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    }).then(res => res.json()).then(result => {\n      if (result.token) alert(\"Login \" + username + \" successfully\");else if (result.message === \"invalid username\") alert(\"Username not found\");else if (result.message === \"invalid password\") alert(\"Invalid password\");else alert(result);\n      this.setState({\n        username: \"\"\n      }); // if (result.message===\"success\")\n      //   alert(\"Login \" + username + \" successfully\")\n      // else\n      //   alert(\"User \"+ username +\" is existing. Please choose other username\")\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"form-signin-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Please login \"), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" Username\"), React.createElement(\"input\", {\n      id: \"username\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      onChange: e => this.handleChangeUsername(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      onChange: e => this.handleChangePassword(e.target.value),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-lg btn-primary btn-block\",\n      type: \"button\",\n      onClick: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Sign in\"));\n  }\n\n}","map":{"version":3,"sources":["/data/golang/project/src/react-app/src/containers/Login.js"],"names":["React","Component","Login","constructor","props","state","username","undefined","password","signUpError","handleChangeUsername","bind","handleChangePassword","handleLogin","value","setState","fetch","method","mode","credentials","headers","body","JSON","stringify","then","res","json","result","token","alert","message","render","e","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Login extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      username: undefined,\n      password: undefined,\n      signUpError: undefined\n    }\n    this.handleChangeUsername = this.handleChangeUsername.bind(this)\n    this.handleChangePassword = this.handleChangePassword.bind(this)\n    this.handleLogin = this.handleLogin.bind(this)\n  }\n  handleChangeUsername(value){\n    this.setState({\n      username: value,\n    })\n  }\n  handleChangePassword(value){\n    this.setState({\n      password: value,\n    })\n  }\n  handleLogin() {\n    const {\n      username,\n      password\n    } = this.state;\n    fetch(\"http://localhost:8766/user/login\",{\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Access-Control-Allow-Methods': 'POST',\n        'Access-Control-Allow-Credentials':'true'\n      },\n      body: JSON.stringify({\n        username:username,\n        password:password\n      }),\n    }).then((res)=>res.json()).then((result)=>{\n      if (result.token) \n        alert(\"Login \" + username + \" successfully\")\n      else if (result.message===\"invalid username\")\n        alert(\"Username not found\")\n      else if (result.message===\"invalid password\")\n        alert(\"Invalid password\")\n      else \n        alert(result)\n    this.setState({\n      username:\"\"\n    })\n      // if (result.message===\"success\")\n      //   alert(\"Login \" + username + \" successfully\")\n      // else\n      //   alert(\"User \"+ username +\" is existing. Please choose other username\")\n    })\n  }\n  render() {\n    return (\n    <form className=\"form-signin\">\n            <h2 className=\"form-signin-heading\"> Please login </h2>\n            <label className=\"sr-only\"> Username\n            </label>\n            <input id=\"username\" className=\"form-control\" placeholder=\"Username\" onChange={(e)=>this.handleChangeUsername(e.target.value)} required />\n            <label className=\"sr-only\"> Password</label>\n            <input type=\"password\" id=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={(e)=>this.handleChangePassword(e.target.value)} required />\n            <button className=\"btn btn-lg btn-primary btn-block\" type=\"button\" onClick={this.handleLogin}> Sign in\n            </button>\n        </form>\n    )\n}\n}\n"]},"metadata":{},"sourceType":"module"}